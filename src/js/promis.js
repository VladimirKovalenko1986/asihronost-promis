// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// * Promis
// const promise = new Promise((resolve, reject) => {
//   const canFullfill = Math.random() > 0.5;

//   setTimeout(() => {
//     if (canFullfill) {
//       resolve('–í—Å–µ –æ–∫');
//     }

//     reject('–ü—Ä–æ–º–∏—Å –≤—ã–∑–≤–∞–Ω —Å –æ—à–∏–±–∫–æ–π');
//   }, 1000);
// });

// –í—ã–≤–æ–¥–∏–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞

// 1 —Å–ø–æ—Å–æ–±
// * –í–Ω—É—Ç—Ä–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
// promise.then(
//   result => {
//     console.log(result);
//   },
//   error => {
//     console.log(error);
//   }
// );

// 2 —Å–ø–æ—Å–æ–±
//* –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –≤–Ω–µ—à–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏

// promise.then(onFulfilled, onRejeccted);

// function onFulfilled(result) {
//   console.log(result);
// }

// function onRejected(error) {
//   console.log(error);
// }

// * –¶–µ–ø–æ—á–∫–∞ –ø—Ä–æ–º–∏—Å–æ–≤
// promise
//   .then(result => {
//     console.log(result);

//     return 5;
//   })
//   .then(x => {
//     console.log(x);

//     return 10;
//   })
//   .then(y => {
//     console.log(y);
//   });

// * –ü–µ—Ä–µ–¥–∞—á–∞ –æ—à–∏–±–∫–∏

// promise
//   .then(onFulfilled)
//   .then(x => {
//     console.log(x);

// –ú–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∫–∏–¥—ã–≤–µ—Ç –æ—à–∏–±–∫—É
//   throw new Error('–û—à–∏–±–∫–∞ –≤–æ –≤—Ç–æ—Ä–æ–º ');

//   return 10;
// })
// .then(y => {
//   console.log(y);
// })
// –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –≤—Å–µ –æ—à–∏–±–∫–∏
// .catch(error => console.log(error))
// —Ñ—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
// .finally(() => console.log('–Ø –±—É–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ!!'));

// * –ü—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏

// const makeOrder = dish => {
//   const DALEY = 1000;

//   return new Promise((resolve, reject) => {
//     const passed = Math.random() > 0.5;

//     setTimeout(() => {
//       if (passed) {
//         resolve('–í–æ—Ç –≤–∞—à–µ –±–ª—é–¥–æ!');
//       }
//       reject('–ò–∑–≤–∏–Ω–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø—Ä–æ–¥—É–∫—Ç—ã!');
//     }, DALEY);
//   });
// };

// makeOrder('–ø–∏—Ä–æ–∂–æ–∫').then(onMakeOrderSuccess).catch(onMakerOrderError);

// function onMakeOrderSuccess(result) {
//   console.log('onMakeOrderSuccess');
//   console.log(result);
// }

// function onMakerOrderError(error) {
//   console.log('onMakerOrderError');
//   console.log(error);
// }

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// * –ñ–∏–≤–æ–π –ø—Ä–∏–º–µ—Ä

// const makePromise = () => {
//   return new Promise((resolve, reject) => {
//     const passed = Math.random() > 0.5;

//     setTimeout(() => {
//       if (passed) {
//         resolve('–ö—É-–∫—É —ç—Ç–æ resolve');
//       }
//       reject('–ö—É-–∫—É —ç—Ç–æ reject');
//     }, 2000);
//   });
// };

// makePromise()
//   .then(result => console.log(result))
//   .catch(error => console.log(error));

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// * –ò–ø–æ–¥—Ä–æ–º

// –ù–∞–±–æ—Ä –∫–æ–Ω–µ–π
const horses = [
  'Secretariat',
  'Eclips',
  'West Australian',
  'Flying Fox',
  'Seabiscult',
];

console.log(
  '%c –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—å—Å—è!',
  'color: brown; font-size: 14px;'
);

// –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∑–∞–ø—É—Å–∫–∞—Ç—å –æ–¥–Ω–æ–≥–æ –∫–æ–Ω—è
function run(horse) {
  return new Promise(resolve => {
    const time = getRandomTime(2000, 3500);

    setTimeout(() => {
      resolve({ horse, time });
    }, time);
  });
}

// run(horses[0]).then(x => console.log(x));
// run(horses[1]).then(x => console.log(x));

// –ú–∞—Å—Å–∏–≤ –ø—Ä–æ–º–∏—Å–æ–≤
const promises = horses.map(run);
console.log('üöÄ ~ promises:', promises);

// * –û–±—Ä–∞–±–æ—Ç–∫–∞ –º–∞—Å—Å–∏–≤–æ–≤ –ø—Ä–æ–º–∏—Å–æ–≤

// race - –±–µ—Ä–µ—Ç –ø–µ—Ä–≤—ã–π –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è –Ω–µ –¥–æ–∂–∏–¥–∞—è—Å—å –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
Promise.race(promises).then(({ horse, time }) => {
  console.log(
    `%c –ü–æ–±–µ–¥–∏—Ç–µ–ª—å ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–ª –∑–∞ ${time} –≤—Ä–µ–º–µ–Ω–∏`,
    'color: blue; font-size: 14px;'
  );
});
// all - –±–µ—Ä–µ—Ç –≤—Å–µ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—Ç—Å—è –≤ –º–∞—Å–∏–≤–µ
Promise.all(promises).then(x => {
  console.log(x);
  console.log(
    '%c –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—å—Å—è —Å—Ç–∞–≤–∫–∏',
    'color: red; fond-size: 14px;'
  );
});

// —Ñ—É–Ω–∫—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –ª–æ—à–∞–¥–∏

function getRandomTime(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
}
