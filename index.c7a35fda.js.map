{"mappings":"AA8KkF,MAA5EA,EAASC,SAASC,eAAe,QACjCC,EAAYF,SAASC,eAAe,WAWpCE,EAAc,IAAIC,KAAK,WAAU,IAAIA,MAAOC,cAAgB,KAGTC,IAEzD,MAAMC,EAAUC,YAAYF,EAAmB,KAI/C,SAASA,IAEe,MAAhBG,EAAML,KAAKK,MAKXC,IAHO,IAAIN,MAAOO,UAGXR,EAAcM,GAIrBG,EAAOC,KAAKC,MAAMJ,EAAQ,OAC1BK,EAAQF,KAAKC,MAAMJ,EAAS,KAAmB,IAC/CM,EAAUH,KAAKC,MAAMJ,EAAS,IAAc,IAC5CO,EAAUJ,KAAKC,MAAMJ,EAAQ,IAAQ,IAE3CX,EAAOmB,YAAc,GAAGN,QAAWG,QAAYC,QAAcC,OAGzDP,GAAQ,IACVS,IACApB,EAAOmB,YAAc,oB,CAIzB,SAASC,IACPC,cAAcb,GACdc,MAAM,8B,CA7BRnB,EAAUoB,iBAAiB,QAASH","sources":["src/js/data.js"],"sourcesContent":["// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// * –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏\n\n// const date = new Date(60000);\n// console.log('üöÄ ~ date', date);\n\n// console.log(date.getMonth());\n\n// console.log(date.getTime());\n\n// –†–∞–∑–Ω–∏—Ü–∞\n\n// const date1 = Date.now();\n\n// setTimeout(() => {\n//   const date2 = Date.now();\n\n//   console.log('üöÄ ~ date1', date1);\n//   console.log('üöÄ ~ setTimeout ~ date2', date2);\n\n//   console.log(date2 - date1);\n// }, 3000);\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// * –¢–∞–π–º–µ—Ä\n\n// const refs = {\n//   startBtn: document.querySelector('button[data-action-start]'),\n//   stopBtn: document.querySelector('button[data-action-stop]'),\n//   clockface: document.querySelector('.js-clockface'),\n// };\n\n// * –ü–∏—à–µ–º —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å\n// class Timer {\n// –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –Ω–∏–∂–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä\n// constructor({ onTick }) {\n//   this.intervalId = null;\n//   this.isActive = false;\n//   this.onTick = onTick;\n\n//   this.init();\n// }\n\n// –î–æ–±–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –Ω–∞—á–∞–ª–µ\n// init() {\n//   const time = this.getTimeComponents(0);\n//   this.onTick(time);\n// }\n\n// –ö–æ–ø–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –∏–∑ –Ω–∏–∂–Ω–µ–π –∑–∞–¥–∞—á–∏\n// start() {\n//   if (this.isActive) {\n//     return;\n//   }\n//   const starTime = Date.now();\n//   this.isActive = true;\n\n//   this.intervalId = setInterval(() => {\n//     const currentTime = Date.now();\n//     const deltaTime = currentTime - starTime;\n\n//     const time = this.getTimeComponents(deltaTime);\n\n// –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—à –∞–≥—É–º–µ–Ω—Ç  —Ñ—É–Ω–∫—Ü–∏–∏\n//     this.onTick(time);\n//   }, 1000);\n// }\n\n// stop() {\n//   clearInterval(this.intervalId);\n//   this.isActive = false;\n\n// –°—Ç–∞–≤–∏–º –æ—á–∏—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//   }\n\n//   pad(value) {\n//     return String(value).padStart(2, '0');\n//   }\n\n//   getTimeComponents(time) {\n//     const hours = this.pad(\n//       Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//     );\n//     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//     return { hours, mins, secs };\n//   }\n// }\n\n// const timer = new Timer(\n// –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n//   { onTick: updateClockface }\n// );\n// * –ü–∏—à–µ–º —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã\n// {\n// –î–µ–ª–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞–¥–∏–º –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–ª–∏–µ–∞–Ω\n// intervalId: null,\n// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–∞—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞\n// isActive: false,\n\n// start() {\n// –î–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–∞–π–º–µ—Ä–∞\n// if (this.isActive) {\n//   return;\n// }\n// –ï—Å–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ\n// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞\n// const starTime = Date.now();\n// this.isActive = true;\n\n// this.intervalId = setInterval(() => {\n// –ù–∞ –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏\n// const currentTime = Date.now();\n//   console.log('üöÄ ~ setInterval ~ currentTime', currentTime);\n// –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É\n// const deltaTime = currentTime - starTime;\n\n// –û—Ç–Ω–∏–º–∞–µ–º –≤—Ä–µ–º—è —Ç–µ–∫—É—â–µ–µ –æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ\n// console.log(currentTime - starTime);\n// timeComponents –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∑–º–µ–Ω–∏–ª–∏ –Ω–∞ { hours, mins, secs } –ø—Ä–æ–≤–µ–ª–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–∞—Ä–∏–∑–∞—Ü–∏—é\n// –∑–∞–º–µ–Ω—è–µ–º { hours, mins, secs } –Ω–∞ time —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –Ω–µ –Ω—É–∂–µ–Ω\n// const time = getTimeComponents(deltaTime);\n// –ü—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∫ –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–∏—Ç—å\n// console.log(`${hours}:${mins}:${secs}`);\n// –î–æ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n// updateClockface(time);\n\n// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ä–µ–º–µ–Ω–∏\n// console.log(\n//   `${pad(new Date(deltaTime).getUTCHours())}:${pad(\n//     new Date(deltaTime).getMinutes()\n//   )}:${pad(new Date(deltaTime).getSeconds())}`\n// );\n// }, 1000);\n//   },\n//   stop() {\n//     clearInterval(this.intervalId);\n//     this.isActive = false;\n//   },\n// };\n\n// refs.startBtn.addEventListener('click', timer.start.bind(timer));\n\n// refs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\n// –ú–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤\n// function pad(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –≤ –∫–æ–Ω—Å–æ–ª–µ –≤—ã–≤–æ–¥–∏–ª–æ—Å—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤—Ä–µ–º—è (—Ö—Ö:—Ö—Ö:—Ö—Ö)\n// –ö–æ–¥ –≤–∑—è—Ç —Å –∞–¥—Å–∫–æ–π –∫–æ–ø–∏–ø–∞—Å—Ç—ã —Å–æ —Å—Ç–µ–∫–∞\n\n// –ü–µ—Ä–µ–Ω–æ—Å–∏–º –≤ –∫–ª–∞—Å—Å\n// function getTimeComponents(time) {\n//   const hours = pad(\n//     Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//   );\n//   const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//   const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//   return { hours, mins, secs };\n// }\n\n// function updateClockface({ hours, mins, secs }) {\n//   refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n// }\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// –ù–∞–ø–∏—Å–∞—Ç–∏ —Ç–∞–π–º–µ—Ä –∑–≤–æ—Ä–æ—Ç–Ω—å–æ–≥–æ –≤—ñ–¥–ª—ñ–∫—É –¥–æ –ù–æ–≤–æ–≥–æ —Ä–æ–∫—É, —è–∫–∏–π –º–æ–∂–Ω–∞ –∑—É–ø–∏–Ω–∏—Ç–∏ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –Ω–∞ –∫–Ω–æ–ø–∫—É STOP\n\nconst timeEL = document.getElementById('time');\nconst stopBtnEl = document.getElementById('stopBtn');\n\n// –ù–æ–≤–∏–π —Ä—ñ–∫ - 1 —Å—ñ—á–Ω—è 00:00 2024\n// –°—å–æ–≥–æ–¥–Ω—ñ—à–Ω—è –¥–∞—Ç–∞ - 22 –ª—é—Ç–æ–≥–æ 20:20 2023\n// –ë—É–¥–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ setinterval(),\n\n//  ? 1. –í—ñ–¥ –Ω–æ–≤–æ–≥–æ —Ä–æ–∫—É –≤–∏–¥–Ω—è—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –¥–∞—Ç—É - —Ç–∞–∫–∏–º —á–∏–Ω–æ–º –º–∏ –æ—Ç—Ä–∏–º—î–º–æ —Ä—ñ–∑–Ω–∏—Ü—é –≤ —á–∞—Å—ñ (–±—É–¥–µ–º–æ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑ –º—ñ–ª—ñ—Å–∫—É–Ω–¥–∞–º–∏)\n//  ? 2. –û—Ç—Ä–∏–º–∞–Ω—ñ –º—ñ–ª–ª—ñ—Å–µ–∫—É–Ω–¥–∏ –≤ –ø. 1 –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ –≤ –¥–Ω—ñ, –≥–æ–¥–∏–Ω–∏, —Ö–≤, —Å–µ–∫—É–Ω–¥–∏, —è–∫—ñ –ª–∏—à–∏–ª–∏—Å—å –¥–æ –Ω–æ–≤–æ–≥–æ —Ä–æ–∫—É.\n//  ? 3. –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—ñ –¥–∞–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—Ü—É –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ\n\n// –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –¥–∞—Ç—É –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–æ–∫—É\nconst newYearDate = new Date(`Jan 1, ${new Date().getFullYear() + 1}`);\n\n// –î–ª—è —Ç–æ–≥–æ —â–æ–± –±—É–≤ —Ç–∞–π–º–µ—Ä –≤—ñ–¥—Ä–∞–∑—É –≤–∏–∑–∏–≤–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–¥ —ñ–Ω—Ç–µ—Ä–≤–∞–ª–æ–º\ncountDownTimeToNY();\n\nconst timerId = setInterval(countDownTimeToNY, 1000);\n\nstopBtnEl.addEventListener('click', stopInterval);\n\nfunction countDownTimeToNY() {\n  // –û—Ç—Ä—ñ–º—É–≤–∞—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∞—Ç—É\n  const now = Date.now();\n  // 2 —Å–ø–æ—Å—ñ–±\n  const now1 = new Date().getTime();\n\n  // –û—Ç—Ä–∏–º—É—î–º–æ —Ä—ñ–∑–Ω–∏—Ü—é - —Å–∫—ñ–ª—å–∫—ñ –º—Å–µ–∫ –ª–∏—à–∏–ª–æ—Å—å –¥–æ –Ω–æ–≤–æ–≥–æ —Ä–æ–∫—É\n  const diff = newYearDate - now;\n\n  // –í–∏—Ç—é–≥—É—î–º–æ –∫—ñ–ª—å–∫—ñ—Ç—å –¥–Ω—ñ–≤, –≥–æ–¥–∏–Ω, —Ö–≤, —Å–µ–∫\n  //???????????????????????????? —Å–µ–∫ /  —Ö–≤ / –≥–æ–¥ / –¥–Ω—ñ\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);\n  const minutes = Math.floor((diff / (1000 * 60)) % 60);\n  const seconds = Math.floor((diff / 1000) % 60);\n\n  timeEL.textContent = `${days} d. ${hours} h. ${minutes} m. ${seconds} s.`;\n\n  // –ú–æ–∂–Ω–æ –¥–æ–¥–∞—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É, —è–∫—â–æ –º–∏ –ø–µ—Ä–µ–≤–∞–ª–∏–ª–∏ –∑–∞ –Ω—É–ª—å(—Ç–∞–π–º–µ—Ä –∑–∞–∫—ñ–Ω—á–∏–≤—Å—è) –º–∏ –∑—É–ø–∏–Ω—è—î–º–æ –æ–π–≥–æ\n  if (diff <= 0) {\n    stopInterval();\n    timeEL.textContent = 'Heppy New Year!!!';\n  }\n}\n\nfunction stopInterval() {\n  clearInterval(timerId);\n  alert('The timer has been stopped!');\n}\n\n// * –ö–æ–¥ –∏–∑ —Å–∞–π—Ç–∞, –≤ —Å—Ç–∞—Ä–æ–º –æ–±—Ä–∞–∑—Ü–µ\n\n// Set the date we're counting down to\n// var countDownDate = new Date('Jan 5, 2024 15:37:25').getTime();\n\n// Update the count down every 1 second\n// var x = setInterval(function () {\n// Get today's date and time\n// var now = new Date().getTime();\n\n// Find the distance between now and the count down date\n// var distance = countDownDate - now;\n\n// Time calculations for days, hours, minutes and seconds\n// var days = Math.floor(distance / (1000 * 60 * 60 * 24));\n// var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n// var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n// var seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n// Output the result in an element with id=\"demo\"\n// document.getElementById('demo').innerHTML =\n//   days + 'd ' + hours + 'h ' + minutes + 'm ' + seconds + 's ';\n\n// If the count down is over, write some text\n//   if (distance < 0) {\n//     clearInterval(x);\n//     document.getElementById('demo').innerHTML = 'EXPIRED';\n//   }\n// }, 1000);\n"],"names":["$deb185f198c84388$var$timeEL","document","getElementById","$deb185f198c84388$var$stopBtnEl","$deb185f198c84388$var$newYearDate","Date","getFullYear","$deb185f198c84388$var$countDownTimeToNY","$deb185f198c84388$var$timerId","setInterval","now","diff","getTime","days","Math","floor","hours","minutes","seconds","textContent","$deb185f198c84388$var$stopInterval","clearInterval","alert","addEventListener"],"version":3,"file":"index.c7a35fda.js.map"}