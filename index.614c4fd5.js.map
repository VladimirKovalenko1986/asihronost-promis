{"mappings":"AA0BM,MAAAA,EAAO,CACXC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,UAAWH,SAASC,cAAc,kBA+DpC,MAAMG,EAAQ,IA3DC,MAWyCC,OACpD,MAAMC,EAAOC,KAAKC,kBAAkB,GACpCD,KAAKE,OAAOH,E,CAIaI,QACzB,GAAIH,KAAKI,SACP,OAEF,MAAMC,EAAWC,KAAKC,MACtBP,KAAKI,UAAW,EAEhBJ,KAAKQ,WAAaC,aAAY,KAC5B,MACMC,EADcJ,KAAKC,MACOF,EAE1BN,EAAOC,KAAKC,kBAAkBS,GAGXV,KAApBE,OAAOH,EAAK,GAChB,I,CAGLY,OACEC,cAAcZ,KAAKQ,YACnBR,KAAKI,UAAW,EAGQ,MAAlBL,EAAOC,KAAKC,kBAAkB,GACpCD,KAAKE,OAAOH,E,CAGdc,IAAIC,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,CAGnCf,kBAAkBF,GAOhB,MAAO,C,MANOC,KAAKa,IACjBI,KAAKC,MAAMnB,EAAS,MAAyB,O,KAElCC,KAAKa,IAAII,KAAKC,MAAMnB,EAAS,KAAoB,M,KACjDC,KAAKa,IAAII,KAAKC,MAAMnB,EAAS,IAAc,M,CAnD1DoB,aAAYjB,OAAEA,IACZF,KAAKQ,WAAa,KAClBR,KAAKI,UAAW,EAChBJ,KAAKE,OAASA,EAEdF,KAAKF,M,GAsDkB,CAAvBI,OAyEJ,UAAyBkB,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IACtC/B,EAAKK,UAAU2B,YAAc,GAAGH,KAASC,KAAQC,G,IAxBnD/B,EAAKC,SAASgC,iBAAiB,QAAS3B,EAAMM,MAAMsB,KAAK5B,IAEzDN,EAAKI,QAAQ6B,iBAAiB,QAAS3B,EAAMc,KAAKc,KAAK5B","sources":["src/js/data.js"],"sourcesContent":["// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// * –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏\n\n// const date = new Date(60000);\n// console.log('üöÄ ~ date', date);\n\n// console.log(date.getMonth());\n\n// console.log(date.getTime());\n\n// –†–∞–∑–Ω–∏—Ü–∞\n\n// const date1 = Date.now();\n\n// setTimeout(() => {\n//   const date2 = Date.now();\n\n//   console.log('üöÄ ~ date1', date1);\n//   console.log('üöÄ ~ setTimeout ~ date2', date2);\n\n//   console.log(date2 - date1);\n// }, 3000);\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// * –¢–∞–π–º–µ—Ä\n\nconst refs = {\n  startBtn: document.querySelector('button[data-action-start]'),\n  stopBtn: document.querySelector('button[data-action-stop]'),\n  clockface: document.querySelector('.js-clockface'),\n};\n\n// * –ü–∏—à–µ–º —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å\nclass Timer {\n  // –î–æ–±–∞–≤–ª—è–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –Ω–∏–∂–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä\n  constructor({ onTick }) {\n    this.intervalId = null;\n    this.isActive = false;\n    this.onTick = onTick;\n\n    this.init();\n  }\n\n  // –î–æ–±–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏ –Ω–∞—á–∞–ª–µ\n  init() {\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  // –ö–æ–ø–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –∏–∑ –Ω–∏–∂–Ω–µ–π –∑–∞–¥–∞—á–∏\n  start() {\n    if (this.isActive) {\n      return;\n    }\n    const starTime = Date.now();\n    this.isActive = true;\n\n    this.intervalId = setInterval(() => {\n      const currentTime = Date.now();\n      const deltaTime = currentTime - starTime;\n\n      const time = this.getTimeComponents(deltaTime);\n\n      // –ü–µ—Ä–µ–¥–∞–µ–º –Ω–∞—à –∞–≥—É–º–µ–Ω—Ç  —Ñ—É–Ω–∫—Ü–∏–∏\n      this.onTick(time);\n    }, 1000);\n  }\n\n  stop() {\n    clearInterval(this.intervalId);\n    this.isActive = false;\n\n    // –°—Ç–∞–≤–∏–º –æ—á–∏—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n    const time = this.getTimeComponents(0);\n    this.onTick(time);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  getTimeComponents(time) {\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { hours, mins, secs };\n  }\n}\n\nconst timer = new Timer(\n  // –ü–µ—Ä–µ–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è\n  { onTick: updateClockface }\n);\n// * –ü–∏—à–µ–º —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã\n// {\n// –î–µ–ª–∞–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–µ—Ä–µ–¥–∞–¥–∏–º –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª —Å–ª–∏–µ–∞–Ω\n// intervalId: null,\n// –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–∞—è–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞\n// isActive: false,\n\n// start() {\n// –î–µ–ª–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–∞–π–º–µ—Ä–∞\n// if (this.isActive) {\n//   return;\n// }\n// –ï—Å–ª–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω—ã–π –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ\n// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å—Ç–∞—Ä—Ç–∞\n// const starTime = Date.now();\n// this.isActive = true;\n\n// this.intervalId = setInterval(() => {\n// –ù–∞ –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏\n// const currentTime = Date.now();\n//   console.log('üöÄ ~ setInterval ~ currentTime', currentTime);\n// –í—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑–Ω–∏—Ü—É\n// const deltaTime = currentTime - starTime;\n\n// –û—Ç–Ω–∏–º–∞–µ–º –≤—Ä–µ–º—è —Ç–µ–∫—É—â–µ–µ –æ—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ\n// console.log(currentTime - starTime);\n// timeComponents –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∑–º–µ–Ω–∏–ª–∏ –Ω–∞ { hours, mins, secs } –ø—Ä–æ–≤–µ–ª–∏ –¥–µ—Å—Ç—Ä—É–∫—Ç–∞—Ä–∏–∑–∞—Ü–∏—é\n// –∑–∞–º–µ–Ω—è–µ–º { hours, mins, secs } –Ω–∞ time —Ç–∞–∫ –∫–∞–∫ –æ–Ω —É–∂–µ –Ω–µ –Ω—É–∂–µ–Ω\n// const time = getTimeComponents(deltaTime);\n// –ü—Ä–æ–ø–∏—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∫ –æ–Ω –¥–æ–ª–∂–µ–Ω –≤—ã–≥–ª—è–¥–∏—Ç—å\n// console.log(`${hours}:${mins}:${secs}`);\n// –î–æ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å\n// updateClockface(time);\n\n// –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –≤—Ä–µ–º–µ–Ω–∏\n// console.log(\n//   `${pad(new Date(deltaTime).getUTCHours())}:${pad(\n//     new Date(deltaTime).getMinutes()\n//   )}:${pad(new Date(deltaTime).getSeconds())}`\n// );\n// }, 1000);\n//   },\n//   stop() {\n//     clearInterval(this.intervalId);\n//     this.isActive = false;\n//   },\n// };\n\nrefs.startBtn.addEventListener('click', timer.start.bind(timer));\n\nrefs.stopBtn.addEventListener('click', timer.stop.bind(timer));\n\n// –ú–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤\n// function pad(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã –≤ –∫–æ–Ω—Å–æ–ª–µ –≤—ã–≤–æ–¥–∏–ª–æ—Å—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≤—Ä–µ–º—è (—Ö—Ö:—Ö—Ö:—Ö—Ö)\n// –ö–æ–¥ –≤–∑—è—Ç —Å –∞–¥—Å–∫–æ–π –∫–æ–ø–∏–ø–∞—Å—Ç—ã —Å–æ —Å—Ç–µ–∫–∞\n\n// –ü–µ—Ä–µ–Ω–æ—Å–∏–º –≤ –∫–ª–∞—Å—Å\n// function getTimeComponents(time) {\n//   const hours = pad(\n//     Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//   );\n//   const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//   const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//   return { hours, mins, secs };\n// }\n\nfunction updateClockface({ hours, mins, secs }) {\n  refs.clockface.textContent = `${hours}:${mins}:${secs}`;\n}\n"],"names":["$deb185f198c84388$var$refs","startBtn","document","querySelector","stopBtn","clockface","$deb185f198c84388$var$timer","init","time","this","getTimeComponents","onTick","start","isActive","starTime","Date","now","intervalId","setInterval","deltaTime","stop","clearInterval","pad","value","String","padStart","Math","floor","constructor","hours","mins","secs","textContent","addEventListener","bind"],"version":3,"file":"index.614c4fd5.js.map"}